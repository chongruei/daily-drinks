{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.fc482189c2d48cb0b50d.hot-update.js","sources":["webpack:///./components/ShoppingCart/ShoppingCart.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {Container, Cart, PurchaseContainer, Checkout, Item} from './styles';\r\nimport {\r\n  removeProduct,\r\n  changeProductQuantity,\r\n} from '../../services/cart/actions';\r\n\r\nconst findProductIndex = (products, product) =>\r\n  products.findIndex(p => p.id === product.id);\r\n\r\nconst ShoppingCart = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => state.cart.products);\r\n\r\n  const handleRemoveProduct = product => () => {\r\n    dispatch(removeProduct(product));\r\n  };\r\n\r\n  const handleIncreaseProductQuantity = product => () => {\r\n    const newProduct = {...product};\r\n    const productIndex = findProductIndex(products, newProduct);\r\n    newProduct.quantity = newProduct.quantity + 1;\r\n    newProduct.totalPrice = newProduct.price * newProduct.quantity;\r\n\r\n    dispatch(changeProductQuantity(newProduct, productIndex));\r\n  };\r\n\r\n  const handleDecreaseProductQuantity = product => () => {\r\n    const newProduct = {...product};\r\n    const productIndex = findProductIndex(products, newProduct);\r\n    newProduct.quantity = newProduct.quantity - 1;\r\n    newProduct.totalPrice = newProduct.price * newProduct.quantity;\r\n\r\n    dispatch(changeProductQuantity(newProduct, productIndex));\r\n  };\r\n\r\n  return (\r\n    <Container toggle={toggle}>\r\n      <Cart\r\n        toggle={toggle}\r\n        onClick={() => setToggle(currToggle => !currToggle)}\r\n      />\r\n\r\n      {toggle && (\r\n        <React.Fragment>\r\n          <PurchaseContainer>\r\n            {products &&\r\n              products.map(product => {\r\n                const {id, imgUrl, name, quantity, totalPrice} = product;\r\n\r\n                return (\r\n                  <Item\r\n                    key={id}\r\n                    imgUrl={imgUrl}\r\n                    prodName={name}\r\n                    quantity={quantity}\r\n                    totalPrice={totalPrice}\r\n                    removeProduct={handleRemoveProduct(product)}\r\n                    increaseProductQuantity={handleIncreaseProductQuantity(\r\n                      product,\r\n                    )}\r\n                    decreaseProductQuantity={handleDecreaseProductQuantity(\r\n                      product,\r\n                    )}\r\n                  />\r\n                );\r\n              })}\r\n          </PurchaseContainer>\r\n          <Checkout totalPrice={300} />\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport {ShoppingCart};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAPA;AACA;AAQA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAPA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;;A","sourceRoot":""}